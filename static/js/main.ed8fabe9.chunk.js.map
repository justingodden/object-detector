{"version":3,"sources":["components/Header.js","components/ImageContainer.js","components/UploadButton.js","components/PredictedClasses.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","ImageContainer","modelPromise","image","setImage","classes","src","alt","cocoSsd","useStyles","makeStyles","theme","root","margin","spacing","icon","marginLeft","UploadButton","setClasses","handleDetect","a","imageElement","document","querySelector","console","log","model","detect","result","htmlFor","Button","variant","color","component","accept","id","type","capture","onChange","e","target","files","length","file","newUrl","URL","createObjectURL","handleUpload","onClick","PredictedClasses","map","cls","i","class","score","toFixed","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yVAUeA,MARf,WACI,OACI,qBAAKC,UAAU,SAAf,8BCOOC,ICGXC,EDHWD,EATf,YAAuD,IAA7BE,EAA4B,EAA5BA,MACtB,OADkD,EAArBC,SAAqB,EAAXC,QAEnC,mCACI,qBAAKC,IAAKH,EAAOI,IAAK,OAAQP,UAAU,a,8ECUpDE,EAAeM,SAEf,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF,QAAS,CACLC,OAAQF,EAAMG,QAAQ,KAE1BC,KAAM,CACNC,WAAYL,EAAMG,QAAQ,QAuFnBG,MAnFf,YAAuD,EAA/Bd,MAAgC,IAAzBC,EAAwB,EAAxBA,SAAUc,EAAc,EAAdA,WAC/Bb,EAAUI,IAqBVU,EAAY,uCAAG,gCAAAC,EAAA,6DACbC,EAAeC,SAASC,cAAc,UAC1CC,QAAQC,IAAIJ,GAFK,SAGGnB,EAHH,cAGXwB,EAHW,OAIjBF,QAAQC,IAAIC,GAJK,SAKEA,EAAMC,OAAON,GALf,OAKbO,EALa,OAMjBJ,QAAQC,IAAIG,GACZV,EAAWU,GAPM,4CAAH,qDAkClB,OACI,sBAAK5B,UAAWK,EAAQO,KAAxB,UACI,uBAAOiB,QAAQ,mBAAf,SACA,eAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,UAAU,OAAtD,UACI,uBACIjC,UAAU,aACVkC,OAAO,UACPC,GAAG,mBACHC,KAAK,OACLC,QAAQ,cACRC,SAAU,SAACC,GAAD,OA/DL,SAACC,GAClB,GAAIA,EAAOC,OACqB,IAAxBD,EAAOC,MAAMC,OAAc,CAC3B,IAAMC,EAAOH,EAAOC,MAAM,GACpBG,EAASC,IAAIC,gBAAgBH,GAMnCvC,EAASwC,IAqDYG,CAAaR,EAAEC,WAPxC,iBAUI,cAAC,IAAD,CAAwBxC,UAAWK,EAAQU,YAG/C,cAACe,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAM,UACNgB,QAAS,kBAAM7B,KAHnB,iCCtFG8B,MAXf,YAAwC,IAAZ5C,EAAW,EAAXA,QACxB,OACI,sBAAKL,UAAU,UAAf,UACI,oDACA,6BACKK,GAAWA,EAAQ6C,KAAI,SAACC,EAAKC,GAAN,OAAY,+BAAaD,EAAIE,MAAjB,KAA0BF,EAAIG,MAAMC,QAAQ,GAA5C,MAASH,YCuB9CI,MAtBf,WAAgB,IAAD,EACaC,mBAAS,MADtB,mBACNtD,EADM,KACCC,EADD,OAEiBqD,mBAAS,MAF1B,mBAENpD,EAFM,KAEGa,EAFH,KAIb,OACE,sBAAKlB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CACEG,MAAOA,EACPC,SAAUA,EACVC,QAASA,IAEX,cAAC,EAAD,CACEF,MAAOA,EACPC,SAAUA,EACVc,WAAYA,IAEd,cAAC,EAAD,CAAkBb,QAASA,QCbpBqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/C,SAASgD,eAAe,SAM1BZ,M","file":"static/js/main.ed8fabe9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            Object Detector\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction ImageContainer({ image, setImage, classes }) {\r\n    return (\r\n        <>\r\n            <img src={image} alt={\"snap\"} className=\"photo\"/>\r\n            {/* <canvas className=\"canvas\" ></canvas> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport PhotoCameraRoundedIcon from \"@material-ui/icons/PhotoCameraRounded\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n// import '@tensorflow/tfjs-backend-cpu';\r\n// import '@tensorflow/tfjs-backend-webgl';\r\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\r\nimport { drawRect } from \"../utilities\";\r\n\r\n// console.log(\"loading model\")\r\n// const model = cocoSsd.load()\r\n// console.log(\"model loaded\")\r\n\r\nlet modelPromise;\r\nmodelPromise = cocoSsd.load();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(2),\r\n        },},\r\n        icon: {\r\n        marginLeft: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nfunction UploadButton({ image, setImage, setClasses }) {\r\n    const classes = useStyles();\r\n\r\n    const handleUpload = (target) => {\r\n        if (target.files) {\r\n            if (target.files.length !== 0) {\r\n                const file = target.files[0];\r\n                const newUrl = URL.createObjectURL(file);\r\n                \r\n                // img.src = newUrl;\r\n                // console.log(img.width);\r\n                // img.width = 90;\r\n                // console.log(img.src.width);\r\n                setImage(newUrl);\r\n                // let img = document.querySelector('.photo')\r\n                // let canvas = document.querySelector('.canvas')\r\n                // let ctx = canvas.getContext(\"2d\")\r\n                // ctx.drawImage(img, 0, 0)\r\n                }\r\n            }\r\n        }\r\n    \r\n    const handleDetect = async () => {\r\n        let imageElement = document.querySelector('.photo')\r\n        console.log(imageElement)\r\n        const model = await modelPromise;\r\n        console.log(model)\r\n        let result = await model.detect(imageElement);\r\n        console.log(result)\r\n        setClasses(result)\r\n\r\n\r\n\r\n        // const c = document.querySelector('.canvas');\r\n        // const context = c.getContext('2d');\r\n        // context.drawImage(imageElement, 0, 0);\r\n        // // drawRect(result, context);\r\n        // context.font = '10px Arial';\r\n\r\n        // console.log('number of detections: ', result.length);\r\n        // for (let i = 0; i < result.length; i++) {\r\n        //     context.beginPath();\r\n        //     context.rect(...result[i].bbox);\r\n        //     context.lineWidth = 1;\r\n        //     context.strokeStyle = 'green';\r\n        //     context.fillStyle = 'green';\r\n        //     context.stroke();\r\n        //     context.fillText(\r\n        //         result[i].score.toFixed(3) + ' ' + result[i].class, result[i].bbox[0],\r\n        //         result[i].bbox[1] > 10 ? result[i].bbox[1] - 5 : 10);\r\n        // }\r\n\r\n\r\n\r\n        }\r\n        \r\n    return (\r\n        <div className={classes.root}>\r\n            <label htmlFor=\"icon-button-file\">\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                <input\r\n                    className=\"fileUpload\"\r\n                    accept=\"image/*\"\r\n                    id=\"icon-button-file\"\r\n                    type=\"file\"\r\n                    capture=\"environment\"\r\n                    onChange={(e) => handleUpload(e.target)}\r\n                />\r\n                Upload a Photo\r\n                <PhotoCameraRoundedIcon className={classes.icon}/>\r\n            </Button>\r\n            </label>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => handleDetect()}\r\n            >\r\n                Generate Labels\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadButton\r\n","import React from 'react'\r\n\r\nfunction PredictedClasses({ classes }) {\r\n    return (\r\n        <div className=\"classes\">\r\n            <h3>Predicted Classes:</h3>\r\n            <ul>\r\n                {classes && classes.map((cls, i) => <li key={i}>{cls.class} ({cls.score.toFixed(2)})</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PredictedClasses\r\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport ImageContainer from './components/ImageContainer';\nimport UploadButton from './components/UploadButton';\nimport PredictedClasses from './components/PredictedClasses';\n\n\nfunction App() {\n  const [image, setImage] = useState(null)\n  const [classes, setClasses] = useState(null)\n\n  return (\n    <div className=\"App\">\n        <Header />\n        <ImageContainer\n          image={image}\n          setImage={setImage}\n          classes={classes}\n        />\n        <UploadButton\n          image={image}\n          setImage={setImage}\n          setClasses={setClasses}\n        />\n        <PredictedClasses classes={classes}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}